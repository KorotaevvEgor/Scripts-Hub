#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
–∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.insert(0, '/var/www/scriptshub/Scripts-Hub/vacancy_parser')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vacancy_parser.settings')
django.setup()

from django.contrib.auth.models import User
from scripts.models import Script, ScriptRun
import json


def create_test_script():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏"""
    
    # –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username='test_admin',
        defaults={
            'email': 'test@example.com',
            'is_superuser': True,
            'is_staff': True,
        }
    )
    if created:
        user.set_password('testpass123')
        user.save()
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    else:
        print(f"‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    
    # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
    script, created = Script.objects.get_or_create(
        name='–¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ - –û—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞ –ú–æ—Å–∫–≤–∞+–ú–û',
        defaults={
            'description': '–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –¥–≤—É–º –∑–∞–ø—Ä–æ—Å–∞–º –≤ —Ä–µ–≥–∏–æ–Ω–µ –ú–æ—Å–∫–≤–∞ –∏ –ú–û',
            'search_queries': json.dumps([
                '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞',
                '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞'
            ], ensure_ascii=False),
            'region': 'moscow_mo',
            'max_pages': 5,  # –û–≥—Ä–∞–Ω–∏—á–∏–º –¥–ª—è —Ç–µ—Å—Ç–∞
            'created_by': user,
            'is_active': True
        }
    )
    
    if not created:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç
        script.search_queries = json.dumps([
            '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞',
            '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞'
        ], ensure_ascii=False)
        script.region = 'moscow_mo'
        script.max_pages = 5
        script.save()
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–∫—Ä–∏–ø—Ç: {script.name}")
    else:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç: {script.name}")
    
    return script


def test_script_methods():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã —Å–∫—Ä–∏–ø—Ç–∞"""
    
    print("\n" + "="*60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–¢–û–î–û–í –°–ö–†–ò–ü–¢–ê")
    print("="*60)
    
    script = Script.objects.filter(
        name__icontains='–¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤'
    ).first()
    
    if not script:
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    print(f"üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç: {script.name}")
    
    # –¢–µ—Å—Ç get_search_queries_list()
    queries = script.get_search_queries_list()
    print(f"üìã –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã: {queries}")
    assert len(queries) == 2, f"–û–∂–∏–¥–∞–ª–æ—Å—å 2 –∑–∞–ø—Ä–æ—Å–∞, –ø–æ–ª—É—á–µ–Ω–æ {len(queries)}"
    assert '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞' in queries, "–ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–ø—Ä–æ—Å '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞'"
    assert '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞' in queries, "–ù–µ –Ω–∞–π–¥–µ–Ω –∑–∞–ø—Ä–æ—Å '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞'"
    print("‚úÖ –ú–µ—Ç–æ–¥ get_search_queries_list() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –¢–µ—Å—Ç get_region_ids()
    region_ids = script.get_region_ids()
    print(f"üåç ID —Ä–µ–≥–∏–æ–Ω–æ–≤: {region_ids}")
    assert region_ids == ['1', '1002'], f"–û–∂–∏–¥–∞–ª–∏—Å—å —Ä–µ–≥–∏–æ–Ω—ã ['1', '1002'], –ø–æ–ª—É—á–µ–Ω—ã {region_ids}"
    print("‚úÖ –ú–µ—Ç–æ–¥ get_region_ids() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –¢–µ—Å—Ç get_region_display_name()
    region_name = script.get_region_display_name()
    print(f"üèôÔ∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞: {region_name}")
    assert region_name == '–ú–æ—Å–∫–≤–∞ –∏ –ú–û', f"–û–∂–∏–¥–∞–ª–æ—Å—å '–ú–æ—Å–∫–≤–∞ –∏ –ú–û', –ø–æ–ª—É—á–µ–Ω–æ '{region_name}'"
    print("‚úÖ –ú–µ—Ç–æ–¥ get_region_display_name() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    # –¢–µ—Å—Ç get_search_summary()
    summary = script.get_search_summary()
    print(f"üìä –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ: {summary}")
    assert '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞, –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞' in summary
    assert '–ú–æ—Å–∫–≤–∞ –∏ –ú–û' in summary
    print("‚úÖ –ú–µ—Ç–æ–¥ get_search_summary() —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")


def test_parser_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ø–∞—Ä—Å–µ—Ä–æ–º (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)"""
    
    print("\n" + "="*60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° –ü–ê–†–°–ï–†–û–ú")
    print("="*60)
    
    script = Script.objects.filter(
        name__icontains='–¢–µ—Å—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤'
    ).first()
    
    if not script:
        print("‚ùå –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫ (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è)
    script_run = ScriptRun.objects.create(
        script=script,
        started_by=script.created_by,
        status='running'
    )
    
    print(f"üöÄ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—É—Å–∫: {script_run}")
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
    from scripts.parser import HHVacancyParserDjango
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–∞—Ä—Å–µ—Ä–∞
    parser = HHVacancyParserDjango(script_run)
    
    print(f"‚öôÔ∏è –°–æ–∑–¥–∞–Ω –ø–∞—Ä—Å–µ—Ä –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞: {parser.script.name}")
    print(f"üìã –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–∞—Ä—Å–µ—Ä–∞: {parser.script.get_search_queries_list()}")
    print(f"üåç –†–µ–≥–∏–æ–Ω—ã –ø–∞—Ä—Å–µ—Ä–∞: {parser.script.get_region_ids()}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    test_stats = {
        '–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞': {
            'total_found': 150,
            'collected_vacancies': 50,
            'unique_vacancies': 45,
            'new_vacancies': 20,
            'existing_vacancies': 25,
            'duplicates': 5
        },
        '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞': {
            'total_found': 80,
            'collected_vacancies': 30,
            'unique_vacancies': 25,
            'new_vacancies': 15,
            'existing_vacancies': 10,
            'duplicates': 5
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    script_run.set_queries_stats(test_stats)
    script_run.status = 'completed'
    script_run.save()
    
    print("‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    read_stats = script_run.get_queries_stats()
    print(f"üìä –ü—Ä–æ—á–∏—Ç–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {len(read_stats)} –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    for query, stats in read_stats.items():
        print(f"  üìù '{query}':")
        print(f"    - –ù–∞–π–¥–µ–Ω–æ –≤ API: {stats['total_found']}")
        print(f"    - –°–æ–±—Ä–∞–Ω–æ: {stats['collected_vacancies']}")
        print(f"    - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö: {stats['unique_vacancies']}")
        print(f"    - –ù–æ–≤—ã—Ö: {stats['new_vacancies']}")
        print(f"    - –°—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö: {stats['existing_vacancies']}")
    
    print("‚úÖ –ß—Ç–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")


def show_admin_instructions():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –∞–¥–º–∏–Ω–∫–µ"""
    
    print("\n" + "="*60)
    print("–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ –í –ê–î–ú–ò–ù–ö–ï")
    print("="*60)
    
    print("\nüîß –ù–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:")
    print("1. ‚úÖ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã")
    print("2. ‚úÖ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è (–ú–æ—Å–∫–≤–∞ –∏ –ú–û)")
    print("3. ‚úÖ –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É")
    print("4. ‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ–≥–∏–æ–Ω–µ –∏ –ø–æ–∏—Å–∫–æ–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ –≤ –≤–∞–∫–∞–Ω—Å–∏—è—Ö")
    print("5. ‚úÖ –î–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏")
    
    print("\nüìã –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –≤ –∞–¥–º–∏–Ω–∫–µ:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Django –∞–¥–º–∏–Ω–∫—É: /admin/")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–°–∫—Ä–∏–ø—Ç—ã' ‚Üí '–î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç'")
    print("3. –í —Å–µ–∫—Ü–∏–∏ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞':")
    print("   ‚Ä¢ –ü–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã (JSON): [\"–ò–Ω–∂–µ–Ω–µ—Ä –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞\", \"–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –æ—Ö—Ä–∞–Ω–µ —Ç—Ä—É–¥–∞\"]")
    print("   ‚Ä¢ –†–µ–≥–∏–æ–Ω –ø–æ–∏—Å–∫–∞: –ú–æ—Å–∫–≤–∞ –∏ –ú–û")
    print("   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü: 20 (–∏–ª–∏ –º–µ–Ω—å—à–µ –¥–ª—è —Ç–µ—Å—Ç–∞)")
    
    print("\nüéØ –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:")
    print("‚Ä¢ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É –æ—Ç–¥–µ–ª—å–Ω–æ")
    print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏")
    print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –ø–æ –∫–∞–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è")
    print("‚Ä¢ –§–∏–ª—å—Ç—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–æ–ª—å–∫–æ –ø–æ –ú–æ—Å–∫–≤–µ –∏ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏")
    print("‚Ä¢ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–º—É –∑–∞–ø—Ä–æ—Å—É")
    
    print("\nüìä –ß—Ç–æ –≤—ã —É–≤–∏–¥–∏—Ç–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö:")
    print("‚Ä¢ –û–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (—Å—É–º–º—É –ø–æ –≤—Å–µ–º –∑–∞–ø—Ä–æ—Å–∞–º)")
    print("‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞–∂–¥–æ–º—É –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É")
    print("‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–≥–∏–æ–Ω–µ –¥–ª—è –∫–∞–∂–¥–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏")
    print("‚Ä¢ –û—Ç–º–µ—Ç–∫—É –æ —Ç–æ–º, –ø–æ –∫–∞–∫–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∞–π–¥–µ–Ω–∞ –∫–∞–∂–¥–∞—è –≤–∞–∫–∞–Ω—Å–∏—è")
    
    print("\nüîç –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –≤ –∞–¥–º–∏–Ω–∫–µ:")
    print("‚Ä¢ –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–≥–∏–æ–Ω—É –≤ —Å–ø–∏—Å–∫–µ –≤–∞–∫–∞–Ω—Å–∏–π")
    print("‚Ä¢ –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É")
    print("‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∑–∞–ø—É—Å–∫–∞—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤")
        print("=" * 60)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç
        script = create_test_script()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥—ã —Å–∫—Ä–∏–ø—Ç–∞
        test_script_methods()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –ø–∞—Ä—Å–µ—Ä–æ–º
        test_parser_integration()
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
        show_admin_instructions()
        
        print("\n" + "="*60)
        print("‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("üéâ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
        print("="*60)
        
        print(f"\nüåê –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∞–¥–º–∏–Ω–∫–µ Django")
        print(f"üìù –ù–∞–∑–≤–∞–Ω–∏–µ: '{script.name}'")
        print(f"üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏: {len(script.get_search_queries_list())} –∑–∞–ø—Ä–æ—Å–æ–≤, —Ä–µ–≥–∏–æ–Ω '{script.get_region_display_name()}'")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    main()
